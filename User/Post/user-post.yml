AWSTemplateFormatVersion: '2010-09-09'
Description: Our app API
Parameters:
  RestApi:
    Description: Name of the RestAPI
    Type: String
  ResourceId:
    Description: ID of the Resource
    Type: String
  SCG:
    Description: ID of the Resource
    Type: String
  SBN:
    Description: ID of the Resource
    Type: String
Resources:
  UserPostApi:
    Type: AWS::ApiGateway::Method
    DependsOn:
    - UserPostLambda
    Properties:
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS_PROXY"
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations"
          - lambdaArn: !GetAtt "UserPostLambda.Arn"
      RestApiId: !Ref RestApi
      ResourceId: !Ref ResourceId
  UserPostLambda:
    Type: AWS::Lambda::Function
    DependsOn:
    - UserPostIamRole
    Properties:
      Code: ./
      Description: Function to Get User
      FunctionName: UserPost
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt "UserPostIamRole.Arn"
      Runtime: nodejs10.x
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
          - !Ref SCG
        SubnetIds:
          - !Ref SBN
  UserPostIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Effect: "Allow"
                Resource: '*'
              - Action:
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                Effect: "Allow"
                Resource: '*'
          PolicyName: "UserPostIamRole"
  UserPostApiGatewayInvoke:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt "UserPostLambda.Arn"
      Principal: "apigateway.amazonaws.com"
